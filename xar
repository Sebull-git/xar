#!/usr/bin/env polaris
usage: "xar [options] <directory>"

options {
    "-v" "--verbose" as verbose
    "-m" "--main" (main = "main") : "Set the entrypoint to be run when executing the archive"
    "-z" "--zip-option" (*) as zipOptions : "Options to pass to 'zip'"
    "-o" "--output" (output = "a.out")
}

let dir = match getArgv() {
    [_, dir] -> dir
    _ -> fail("Missing directory arguments. Use xar --help for more information")
}

if verbose then {
    print("Creating archive from directory: " ~ toString(dir))
}else {

}

let header = "#!/usr/bin/bash
id=$RANDOM
mkdir -p /tmp/xar/$id
lines=$(cat $0 | wc -l)
tail -n $(($lines - 9)) $0 > /tmp/xar/$id/xar_temp.zip
unzip -qd /tmp/xar/$id /tmp/xar/$id/xar_temp.zip
export XAR_ROOT=/tmp/xar/$id
/tmp/xar/$id/" ~ main ~ " $@
exec rm -r /tmp/xar/$id
"

let currentDir = !pwd

chdir(dir)
!zip "-r" (currentDir ~ "/xar_temp.zip") "."
chdir(currentDir)

# TODO: Doing this in bash right now, since polaris does not have file redirects yet 
# and we should avoid loading the entire zip file into memory.
!bash "-c" ("echo '" ~ header ~ "' | cat - xar_temp.zip > " ~ output)
!rm "xar_temp.zip"

!chmod "+x" output
